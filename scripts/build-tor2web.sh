#!/bin/bash
CWD=`pwd`
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
SCRIPTNAME="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"
TOR2WEB_GIT_REPO="https://github.com/globaleaks/Tor2web-3.0.git"
TOR2WEB_DIR=~/
OUTPUT_DIR=/data/website/builds/

if [ "$1" = "-h" ]; then
  echo "Usage: ./${SCRIPTNAME} [Tor2web target tag]"
  echo "repository path: is the path to a copy of the GLClient and Tor2web git repositories"
  exit
fi

TOR2WEB_TAG=$1

mkdir -p $OUTPUT_DIR/Tor2web

if [ ! -d ${TOR2WEB_DIR}/Tor2web-3.0 ]; then
  echo "[+] Cloning Tor2web in ${TOR2WEB_DIR}"
  git clone $Tor2web_GIT_REPO ${TOR2WEB_DIR}/Tor2web-3.0
fi

build_Tor2web()
{
  echo "[+] Updating Tor2web"
  cd ${TOR2WEB_DIR}/Tor2web-3.0
  git pull origin master
  Tor2web_REVISION=`git rev-parse HEAD | cut -c 1-8`

  if test $Tor2web_TAG; then
    git checkout $Tor2web_TAG
    $Tor2web_REVISION=$Tor2web_TAG
  fi

  echo "[+] Building Tor2web"
  cd ${TOR2WEB_DIR}/Tor2web-3.0
  POSTINST=${TOR2WEB_DIR}/Tor2web-3.0/debian/postinst
  echo -n "pip install " >> $POSTINST
  for require in `cat ${TOR2WEB_DIR}/Tor2web/requirements.txt`; do
    echo -n "${require} " >> $POSTINST
  done
  echo "" >> $POSTINST
  echo "/etc/init.d/tor2web start" >> $POSTINST
  echo "# generated by your friendly TOR2WEB build bot :)" >> $POSTINST
  python setup.py sdist
  echo "[+] Building .deb"

  cd dist
  py2dsc tor2web-*.tar.gz
  cd deb_dist/tor2web-*
  rm -rf debian/
  cp -rf ${TOR2WEB_DIR}/Tor2web-3.0/debian debian
  debuild
  cd ..
  echo "[+] Adding to local repository"
  dput local tor2web*changes
  mini-dinstall --batch
  cd $CWD

  echo "[+] Signing Release"
  $DIR/sign-release.sh
  rm -rf ${TOR2WEB_DIR}/Tor2web-3.0/dist
}

build_Tor2web

echo "[+] All done!"
